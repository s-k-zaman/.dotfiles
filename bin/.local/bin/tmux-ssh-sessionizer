#!/usr/bin/bash

if [[ $# -eq 1 ]]; then
    selected=$1
else
    ssh_names=()
    ssh_commands=()
     while IFS= read -r line; do
        # Use 'awk' to extract the first word
        first_word=$(echo "$line" | awk '{print $1}')
        # Use 'awk' to extract the rest of the line (excluding the first word)
        rest_of_line=$(echo "$line" | awk '{$1=""; print $0}' | sed 's/^[ \t]*//')
        # Store the first word and the rest of the line in the arrays
        ssh_names+=("$first_word")
        ssh_commands+=("$rest_of_line")
    done < ~/.local/bin/tmux-session-ssh.txt

    lines=$(sed -e ':a;N;$!ba;s/\n/ /g' ~/.local/bin/tmux-session-ssh.txt)
    lines=`echo $lines | sed "s/~/${HOME//\//\\\/}/g"`
    selected=$(printf "%s\n" "${ssh_names[@]}" | fzf --prompt="Select ssh session: ")

    selected_index=-1
    for ((i=0; i<${#ssh_names[@]}; i++)); do
        if [ "${ssh_names[$i]}" = "$selected" ]; then
            selected_index=$i
            break
        fi
    done
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name="${selected}_ssh"
tmux_running=$(pgrep tmux)
command_to_execute="${ssh_commands[$selected_index]}"

# inside tmux and tmux running
if ! tmux has-session -t=$selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name\; send "$command_to_execute" Enter
fi

# if not in tmux then attach to that session.
if [[ -z $TMUX ]]; then
   tmux attach-session -t $selected_name
   exit 0
fi

tmux switch-client -t $selected_name

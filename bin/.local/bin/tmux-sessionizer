#!/usr/bin/bash

if [[ $# -eq 1 ]]; then
    selected=$1
else
    mapfile -t folders < ~/.local/bin/tmux-session-folders.txt
    expanded_folders=()
    for folder in "${folders[@]}"; do
        [[ -z "$folder" || "$folder" =~ ^# ]] && continue # skip blank and comments(#)
        eval expanded_folders+=("$folder")
    done

    folders=$(printf "%s\n" "${expanded_folders[@]}" | sed ':a;N;$!ba;s/\n/ /g')
    folders=`echo $folders | sed "s/~/${HOME//\//\\\/}/g"`
    mapfile -t found_dirs < <(find $folders -mindepth 1 -maxdepth 1 -type d)
    display_dirs=()
    for dir in "${found_dirs[@]}"; do
        if [[ "$dir" == "$HOME"* ]]; then
            display_dirs+=("~${dir#$HOME}")
        else
            display_dirs+=("$dir")
        fi
    done
    selected=$(printf "%s\n" "${display_dirs[@]}" | fzf --prompt="Select a folder: ")
fi

selected="${selected/#\~/$HOME}" # create absolute path

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ "$selected_name" =~ \ |\' ]]; then
    echo "folder name contains space->$selected_name"
    echo "remove space to use in sessionizer"
    exit 0
fi

# inside tmux and tmux running
if ! tmux has-session -t=$selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name -c $selected
fi

# if not in tmux then attach to that session.
if [[ -z $TMUX ]]; then
   tmux attach-session -t $selected_name
   exit 0
fi

tmux switch-client -t $selected_name

#!/bin/bash

# Script to recursively remove node_modules and venv directories
# Usage: ./remove_node_modules_venv.sh [directory]

# Set the starting directory (default to current directory if not provided)
START_DIR="${1:-.}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${YELLOW}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to get directory size in human readable format
get_dir_size() {
    if [ -d "$1" ]; then
        du -sh "$1" 2>/dev/null | cut -f1
    else
        echo "0B"
    fi
}

# Function to remove directories
remove_directories() {
    local dir_name="$1"
    local count=0
    local total_size=0
    
    print_info "Searching for $dir_name directories in $START_DIR..."
    
    # Find and process directories
    while IFS= read -r -d '' dir; do
        if [ -d "$dir" ]; then
            size=$(get_dir_size "$dir")
            print_info "Found: $dir ($size)"
            
            # Ask for confirmation before deletion
            read -p "Delete this directory? [y/N]: " -n 1 -r
            echo
            
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                if rm -rf "$dir" 2>/dev/null; then
                    print_success "Deleted: $dir ($size)"
                    ((count++))
                else
                    print_error "Failed to delete: $dir"
                fi
            else
                print_info "Skipped: $dir"
            fi
        fi
    done < <(find "$START_DIR" -type d -name "$dir_name" -print0 2>/dev/null)
    
    if [ $count -eq 0 ]; then
        print_info "No $dir_name directories found or deleted."
    else
        print_success "Deleted $count $dir_name directories."
    fi
}

# Function to show summary
show_summary() {
    print_info "Scanning complete!"
    
    # Count remaining directories
    local remaining_node_modules=$(find "$START_DIR" -type d -name "node_modules" 2>/dev/null | wc -l)
    local remaining_venv=$(find "$START_DIR" -type d -name "venv" 2>/dev/null | wc -l)
    
    echo
    echo "=== SUMMARY ==="
    echo "Remaining node_modules directories: $remaining_node_modules"
    echo "Remaining venv directories: $remaining_venv"
}

# Main execution
echo "=== Node Modules & Virtual Environment Cleaner ==="
echo "Starting directory: $START_DIR"
echo

# Check if directory exists
if [ ! -d "$START_DIR" ]; then
    print_error "Directory '$START_DIR' does not exist!"
    exit 1
fi

# Option to run in batch mode (no confirmation)
if [ "$2" = "--batch" ] || [ "$2" = "-b" ]; then
    print_info "Running in batch mode (no confirmation required)"
    
    # Batch mode - no confirmation
    node_count=$(find "$START_DIR" -type d -name "node_modules" -exec rm -rf {} + 2>/dev/null; find "$START_DIR" -type d -name "node_modules" 2>/dev/null | wc -l)
    venv_count=$(find "$START_DIR" -type d -name "venv" -exec rm -rf {} + 2>/dev/null; find "$START_DIR" -type d -name "venv" 2>/dev/null | wc -l)
    
    # Count what was actually deleted by checking what's left
    initial_node=$(find "$START_DIR" -type d -name "node_modules" 2>/dev/null | wc -l)
    initial_venv=$(find "$START_DIR" -type d -name "venv" 2>/dev/null | wc -l)
    
    # Remove all found directories
    find "$START_DIR" -type d -name "node_modules" -exec rm -rf {} + 2>/dev/null
    find "$START_DIR" -type d -name "venv" -exec rm -rf {} + 2>/dev/null
    
    final_node=$(find "$START_DIR" -type d -name "node_modules" 2>/dev/null | wc -l)
    final_venv=$(find "$START_DIR" -type d -name "venv" 2>/dev/null | wc -l)
    
    deleted_node=$((initial_node - final_node))
    deleted_venv=$((initial_venv - final_venv))
    
    print_success "Batch deletion complete!"
    print_success "Deleted $deleted_node node_modules directories"
    print_success "Deleted $deleted_venv venv directories"
else
    # Interactive mode
    print_info "Running in interactive mode"
    echo "You will be asked to confirm each deletion."
    echo
    
    # Remove node_modules directories
    remove_directories "node_modules"
    echo
    
    # Remove venv directories  
    remove_directories "venv"
    echo
fi

# Show final summary
show_summary

print_success "Script completed!"


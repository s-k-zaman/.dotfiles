set-option -g default-terminal "tmux-256color"
# set -g default-terminal "tmux" ## trying for image support, pushed for later

# --------------------true color support--------------------
# true color support for older tmux
# set-option -ga terminal-overrides ",tmux-256color:Tc"
# set-option -ga terminal-overrides ",alacritty:Tc" # -- for alacritty 
# set-option -ga terminal-overrides ",xterm-kitty:Tc" # -- for kitty

# true color support for newer tmux
# set-option -sa terminal-features ',tmux-256color:RGB'
# set-option -sa terminal-features ',alacritty:RGB' # -- for alacritty
# set-option -sa terminal-features ',xterm-kitty:RGB' # -- for kitty
# --------------------true color support[end]----------------

set-option -g prefix C-Space
bind-key C-Space send-prefix
unbind C-b

set-option -g focus-events on
# set-option -s extended-keys on
set -s escape-time 0
# misc
set -g clock-mode-style 12
# status 
bind z set-option status
set -g status-style 'bg=#000000 fg=red'
set-window-option -g window-status-current-style fg=#ff758f
set -g status-left-style 'italics fg=#577399'
set -g status-left-length 30
set -g status-right-style 'fg=#bfc0c0'

#enable passthrough[using for image]
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Enable mouse mode
set -g mouse on

bind r source-file ~/.tmux.conf
set -g base-index 1

# prefix+[ -> visual copy mode.
# install xclip if appending to clipboard while yanking.
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard' # copy and exit.
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse

# Split panes with \ and -
bind \\ split-window -h
bind - split-window -v
# split panes in cwd.
# bind \\ split-window -h -c "#{pane_current_path}"
# bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind -r j resize-pane -D 3
bind -r k resize-pane -U 3
bind -r l resize-pane -R 3
bind -r h resize-pane -L 3
# vim-like pane switching
# controlled by plugin -> vim-tmux-navigator.
# maximize a tmux pane
bind -r m resize-pane -Z

# move along windows
bind -n M-H previous-window
bind -n M-L next-window

# to better work with sesh
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# easy query/cht.sh
bind-key -r i run-shell "tmux neww ~/.local/bin/tmux-cht.sh"
bind -N "last-session (via sesh) " L run-shell "sesh last"

# FIX: popup not working
# bind-key -r N popup -E -d "#{pane_current_path}" -w 90% -h 90% opencode

## SESSIONIZER
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r O run-shell "tss"
# TODO: remove this after using tss(sesh for ssh)
bind-key -r y run-shell "tmux neww ~/.local/bin/tmux-ssh-sessionizer"

## sessionize directly
bind-key -r F run-shell "sesh connect -T 'Downloads ðŸ“¥(file manager)'" # for yazi
bind-key -r D run-shell "sesh connect -T 'dotfiles'" # for yazi
bind-key -r Q run-shell "~/.local/bin/tmux-sessionizer ~/Drive/Notes"
# TODO: project access directly
# bind -r T neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || NVIM_TMUX_KEY=1 nvim -c \"Telescope find_files search_dirs={'~/Drive/Notes'}\""
bind -r ` neww -c "#{pane_current_path}" "~/.local/bin/oo & while [ : ]; do sleep 1; done"

## Plugins[should in the very bottom]----------------------------------------
## tpm plugin manager[install this first]
## prefix + I -> install plugins.
set -g @plugin 'tmux-plugins/tpm'
## list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator' # for navigating panes and vim/nvim with Ctrl-hjkl

# set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
# set -g @resurrect-capture-pane-contents 'on' # allow tmux-ressurect to capture pane contents

# set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
# set -g @continuum-save-interval '3'
# set -g @continuum-restore 'on' # enable tmux-continuum functionality

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
